연결리스트

일정한 크기의 배열이 주어졌을 때, 그 크기를 키우기 위해서는 
현재 배열이 저장된 메모리 위치에서 덧붙여나가 크기를 키우면 된다고 생각할 수 있다. 
그러나 실제로는 어떤 배열 옆에는 다른 데이터가 저장되어 있을 확률이 높기 때문에, 더 큰 메모리를 할당하고 그곳으로 하나하나 값을 옮겨줘야 한다.  

이때 realloc 함수를 이용해 메모리를 재할당하면서 새로운 메모리를 할당해주어야 하는데, 그렇지 않다면 값을 옮긴 후 남아있는 메모리는 
값을 가지지 않은채로 의미없이 메모리를 떠돌게 된다.

이 작업들은 2n, 즉 O(n)만큼의 시간이 소모된다.

node *n = malloc(sizeof(node));
if (n != NULL)
{
  n->number = 2; // (*n).number = 2 와 같은 의미. 
  n->next  = NULL;
} 


해시테이블: 조건에 따라 나눠담는 바구니
트라이: O(k)라는 짧은 시간이 걸리지만 메모리를 매우 많이 사용하게 됨
스택(push, pop), 큐(선입선출), 딕셔너리(해시테이블 같은 기능, 사전같은 것. 키와 값으로 이루어짐)